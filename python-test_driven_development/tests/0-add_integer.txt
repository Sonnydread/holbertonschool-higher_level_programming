# 0-add_intege sample tests ::
==============================

# Import function::
===================
>>> add_integer = __import__('0-add_integer').add_integer

# Test da function::
====================
>>> add_integer(3, 1)
4

# Test da function::
====================
>>> add_integer(3, 3)
6

# Test da function::
====================
>>> add_integer(4, -5)
-1

# Test da function::
====================
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

# Test da function::
====================
>>> add_integer(-5, -9)
-14

# Test da function::
====================
>>> add_integer(-3, -8)
-11

# Test da function::
====================
>>> add_integer(float("NaN"), 7)
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

# Test da function::
====================
>>> add_integer(float("-inf"), 2)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

# Test da function::
====================
>>> add_integer("8", 3)
Traceback (most recent call last):
...
TypeError: a must be an integer

# Test da function::
====================
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

# Test da function::
====================
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

# Test da function::
====================
>>> add_integer([[3, 8], [5, 1]])
Traceback (most recent call last):
...
TypeError: a must be an integer

# Test da function::
====================
>>> add_integer(1, 9, 7)
Traceback (most recent call last):
...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
